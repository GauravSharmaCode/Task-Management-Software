{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaurav/Desktop/Projects/Task-Management-Software/frontend/src/app/auth/components/LoginForm.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { login } from \"@/core/api\";\r\n\r\nexport default function LoginForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const router = useRouter();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await login({ username, password });\r\n      if (res.data && res.data.token) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        router.push(\"/tasks\");\r\n      } else {\r\n        setError(\"No token received\");\r\n      }\r\n    } catch (err: any) {\r\n      setError(err?.response?.data?.detail || \"Login failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex flex-col gap-4 w-full max-w-xs\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={e => setUsername(e.target.value)}\r\n        className=\"border rounded px-3 py-2\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={e => setPassword(e.target.value)}\r\n        className=\"border rounded px-3 py-2\"\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"bg-blue-600 text-white rounded px-4 py-2\" disabled={loading}>\r\n        {loading ? \"Logging in...\" : \"Login\"}\r\n      </button>\r\n      {error && <div className=\"text-red-600 text-sm\">{error}</div>}\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAKe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QACT,IAAI;YACF,MAAM,MAAM,MAAM,CAAA,GAAA,qHAAA,CAAA,QAAK,AAAD,EAAE;gBAAE;gBAAU;YAAS;YAC7C,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC9B,aAAa,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK;gBAC5C,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,SAAS;YACX;QACF,EAAE,OAAO,KAAU;gBACR,oBAAA;YAAT,SAAS,CAAA,gBAAA,2BAAA,gBAAA,IAAK,QAAQ,cAAb,qCAAA,qBAAA,cAAe,IAAI,cAAnB,yCAAA,mBAAqB,MAAM,KAAI;QAC1C,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,6LAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;gBACzC,WAAU;gBACV,QAAQ;;;;;;0BAEV,6LAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;gBACzC,WAAU;gBACV,QAAQ;;;;;;0BAEV,6LAAC;gBAAO,MAAK;gBAAS,WAAU;gBAA2C,UAAU;0BAClF,UAAU,kBAAkB;;;;;;YAE9B,uBAAS,6LAAC;gBAAI,WAAU;0BAAwB;;;;;;;;;;;;AAGvD;GAlDwB;;QAKP,qIAAA,CAAA,YAAS;;;KALF","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaurav/Desktop/Projects/Task-Management-Software/frontend/src/app/auth/components/RegisterForm.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { api } from \"@/core/api\";\r\n\r\nexport default function RegisterForm() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    try {\r\n      await api.post(\"/auth/register/\", { username, email, password });\r\n      setSuccess(\"Registration successful! You can now log in.\");\r\n    } catch (err: any) {\r\n      setError(err?.response?.data?.detail || \"Registration failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"flex flex-col gap-4 w-full max-w-xs\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={e => setUsername(e.target.value)}\r\n        className=\"border rounded px-3 py-2\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n        className=\"border rounded px-3 py-2\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={e => setPassword(e.target.value)}\r\n        className=\"border rounded px-3 py-2\"\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"bg-green-600 text-white rounded px-4 py-2\" disabled={loading}>\r\n        {loading ? \"Registering...\" : \"Register\"}\r\n      </button>\r\n      {error && <div className=\"text-red-600 text-sm\">{error}</div>}\r\n      {success && <div className=\"text-green-600 text-sm\">{success}</div>}\r\n    </form>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,WAAW;QACX,SAAS;QACT,WAAW;QACX,IAAI;YACF,MAAM,qHAAA,CAAA,MAAG,CAAC,IAAI,CAAC,mBAAmB;gBAAE;gBAAU;gBAAO;YAAS;YAC9D,WAAW;QACb,EAAE,OAAO,KAAU;gBACR,oBAAA;YAAT,SAAS,CAAA,gBAAA,2BAAA,gBAAA,IAAK,QAAQ,cAAb,qCAAA,qBAAA,cAAe,IAAI,cAAnB,yCAAA,mBAAqB,MAAM,KAAI;QAC1C,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAK,UAAU;QAAc,WAAU;;0BACtC,6LAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;gBACzC,WAAU;gBACV,QAAQ;;;;;;0BAEV,6LAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;gBACtC,WAAU;gBACV,QAAQ;;;;;;0BAEV,6LAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;gBACzC,WAAU;gBACV,QAAQ;;;;;;0BAEV,6LAAC;gBAAO,MAAK;gBAAS,WAAU;gBAA4C,UAAU;0BACnF,UAAU,mBAAmB;;;;;;YAE/B,uBAAS,6LAAC;gBAAI,WAAU;0BAAwB;;;;;;YAChD,yBAAW,6LAAC;gBAAI,WAAU;0BAA0B;;;;;;;;;;;;AAG3D;GAxDwB;KAAA","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaurav/Desktop/Projects/Task-Management-Software/frontend/src/app/auth/core/AuthController.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { verifyToken } from \"@/core/api\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport LogoutButton from \"../components/LogoutButton\";\r\n\r\nexport default function AuthController() {\r\n  const [authChecked, setAuthChecked] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [showForm, setShowForm] = useState<\"login\" | \"register\" | null>(null);\r\n\r\n  useEffect(() => {\r\n    verifyToken()\r\n      .then(() => {\r\n        setIsAuthenticated(true);\r\n      })\r\n      .catch(() => {\r\n        setIsAuthenticated(false);\r\n      })\r\n      .finally(() => setAuthChecked(true));\r\n  }, []);\r\n\r\n  if (!authChecked) {\r\n    return <div className=\"flex items-center justify-center min-h-screen\">Checking authentication...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen gap-6\">\r\n      {showForm === \"login\" || showForm === \"register\" ? (\r\n        <h1 className=\"text-2xl font-bold mb-4\">\r\n          {showForm === \"login\" ? \"Login\" : \"Register\"}\r\n        </h1>\r\n      ) : (\r\n        <h1 className=\"text-2xl font-bold mb-4\">Welcome!</h1>\r\n      )}\r\n      {isAuthenticated ? (\r\n        <>\r\n          <div className=\"text-green-700\">You are logged in.</div>\r\n          <LogoutButton />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {showForm === null && (\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                className=\"bg-blue-600 text-white rounded px-4 py-2\"\r\n                onClick={() => setShowForm(\"login\")}\r\n              >\r\n                Login\r\n              </button>\r\n              <button\r\n                className=\"bg-green-600 text-white rounded px-4 py-2\"\r\n                onClick={() => setShowForm(\"register\")}\r\n              >\r\n                Register\r\n              </button>\r\n            </div>\r\n          )}\r\n          {showForm === \"login\" && (\r\n            <>\r\n              <LoginForm />\r\n              <button className=\"text-blue-600 underline mt-2\" onClick={() => setShowForm(\"register\")}>Don't have an account? Register</button>\r\n              <button className=\"text-gray-500 underline mt-2\" onClick={() => setShowForm(null)}>Back</button>\r\n            </>\r\n          )}\r\n          {showForm === \"register\" && (\r\n            <>\r\n              <RegisterForm />\r\n              <button className=\"text-blue-600 underline mt-2\" onClick={() => setShowForm(\"login\")}>Already have an account? Login</button>\r\n              <button className=\"text-gray-500 underline mt-2\" onClick={() => setShowForm(null)}>Back</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA;;;AALA;;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA+B;IAEtE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,CAAA,GAAA,qHAAA,CAAA,cAAW,AAAD,IACP,IAAI;4CAAC;oBACJ,mBAAmB;gBACrB;2CACC,KAAK;4CAAC;oBACL,mBAAmB;gBACrB;2CACC,OAAO;4CAAC,IAAM,eAAe;;QAClC;mCAAG,EAAE;IAEL,IAAI,CAAC,aAAa;QAChB,qBAAO,6LAAC;YAAI,WAAU;sBAAgD;;;;;;IACxE;IAEA,qBACE,6LAAC;QAAI,WAAU;;YACZ,aAAa,WAAW,aAAa,2BACpC,6LAAC;gBAAG,WAAU;0BACX,aAAa,UAAU,UAAU;;;;;qCAGpC,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;YAEzC,gCACC;;kCACE,6LAAC;wBAAI,WAAU;kCAAiB;;;;;;kCAChC,6LAAC,oJAAA,CAAA,UAAY;;;;;;6CAGf;;oBACG,aAAa,sBACZ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,WAAU;gCACV,SAAS,IAAM,YAAY;0CAC5B;;;;;;0CAGD,6LAAC;gCACC,WAAU;gCACV,SAAS,IAAM,YAAY;0CAC5B;;;;;;;;;;;;oBAKJ,aAAa,yBACZ;;0CACE,6LAAC,iJAAA,CAAA,UAAS;;;;;0CACV,6LAAC;gCAAO,WAAU;gCAA+B,SAAS,IAAM,YAAY;0CAAa;;;;;;0CACzF,6LAAC;gCAAO,WAAU;gCAA+B,SAAS,IAAM,YAAY;0CAAO;;;;;;;;oBAGtF,aAAa,4BACZ;;0CACE,6LAAC,oJAAA,CAAA,UAAY;;;;;0CACb,6LAAC;gCAAO,WAAU;gCAA+B,SAAS,IAAM,YAAY;0CAAU;;;;;;0CACtF,6LAAC;gCAAO,WAAU;gCAA+B,SAAS,IAAM,YAAY;0CAAO;;;;;;;;;;;;;;;;AAOjG;GAtEwB;KAAA","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Gaurav/Desktop/Projects/Task-Management-Software/frontend/src/app/auth/page.tsx"],"sourcesContent":["\"use client\";\r\nimport AuthController from \"./core/AuthController\";\r\n\r\nexport default function AuthPage() {\r\n  return <AuthController />;\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,qBAAO,6LAAC,gJAAA,CAAA,UAAc;;;;;AACxB;KAFwB","debugId":null}}]
}